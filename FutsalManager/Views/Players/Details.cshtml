@model Player

@{
    ViewData["Title"] = "Details";
    var nat = Model.Nationality[..2].ToLower();
    var natUrl = $"https://flagcdn.com/108x81/{nat}.png";
}

<link rel="stylesheet" href="~/css/Player/attribute.css"/>

<style>
.hidden{
    display: none;
}
.action-icon{
margin-left:20px;
margin-right: 20px;
font-size: 2rem; 
}
</style>

<div class="container d-flex justify-content-end align-items-center m-3">
    <a class="action-icon" asp-controller="Players" asp-action="Edit" asp-route-id="@Model.Id" title="Edit @Model.FullName">
        <i class="bi bi-pencil-square" style="color: blue;"></i>
    </a>
    <a class="action-icon" asp-controller="Transfers" asp-action="TeamsIndex" asp-route-playerid="@Model.Id" title="Transfer @Model.FullName">
        <i class="bi bi-binoculars" style="color:green"></i>
    </a>
    <a class="action-icon" asp-controller="Players" asp-action="Delete" asp-route-id="@Model.Id" title="Delete @Model.FullName">
        <i class="bi bi-person-dash" style="color: red;"></i>
    </a>
    @if (Model.Team != null)
    {
        <a class="action-icon" asp-controller="Teams" asp-action="Details" asp-route-id="@Model.Team.Id" title="Details about @Model.FullName's team">
            <i class="bi bi-people" style="color: purple;"></i>
        </a>
    }
</div>

<!--DETAILS-->
<div class="card mt-2 mb-2">
    <div class="card-header d-flex justify-content-between align-items-center bg-light" id="details-header">
        <h3>Details</h3>
        <div id="arrow-container">
            <i class="hidden bi bi-arrow-up" style="font-size: 1.5rem"></i>
            <i class="bi bi-arrow-down" style="font-size: 1.5rem"></i>
        </div>
    </div>
    <div class="card-body" id="details-body" style="display: block">
        <!-- Player information -->
        <a class="action-icon d-flex justify-content-end" asp-controller="Players" asp-action="Edit" asp-route-id="@Model.Id" title="Edit @Model.FullName">
            <i class="bi bi-pencil-square" style="color: blue;"></i>
        </a>
        <div class="row text-center">
            <div class="col col-sm-12 col-md-12 col-lg-6 p-2 d-flex flex-column justify-content-center align-items-center">
                @if (Model.Team != null)
                {
                    <h6>Current team</h6>
                    @if (!string.IsNullOrWhiteSpace(Model.Team.LogoPath))
                    {
                        <img src="@("~/uploads/teams/logos/" + Model.Team.LogoPath)" asp-append-version="true" class="w-50 rounded">
                    }
                    else
                    {
                        <h4 class="text-muted">Team's logo would be here.</h4>
                    }
                    <h3 class="mt-2 mb-2">@Model.Team.Name</h3>
                }
                else
                {
                    <h2>The player is currently inactive.</h2>
                    <br/>
                    <p class="text-muted">Have no team</p>
                }

            </div>
            <div class="col col-sm-12 col-md-12 col-lg-6 p-2 d-flex flex-column align-items-center justify-content-center">
                <h6>Details about player</h6>

                <hr class="w-50 mx-auto"/>

                <div id="name" class="shadow p-3 mb-5 bg-light rounded w-75">
                    <div class="text-start rounded w-25 bg-primary text-light">
                        <h5 class="text-center p-1">Name</h5>
                    </div>
                    <h4>@Model.FullName</h4>
                </div>


                <div id="age" class="shadow p-3 mb-5 bg-light rounded w-75">
                    <div class="text-start rounded w-25 bg-primary text-light">
                        <h5 class="text-center p-1">Age</h5>
                    </div>
                    <h4>@Model.Age</h4>
                </div>


                <div id="birthday" class="shadow p-3 mb-5 bg-light rounded w-75">
                    <div class="text-start rounded w-25 bg-primary text-light">
                        <h5 class="text-center p-1">Birthday</h5>
                    </div>
                    <h4>@Model.Birthday.ToShortDateString()</h4>
                </div>


                <div id="nationality" class="shadow p-3 mb-5 bg-light rounded w-75 text-center">
                    <div class="text-start rounded w-25 bg-primary text-light">
                        <h5 class="text-center p-1">Nationality</h5>
                    </div>
                    <img
                        src="@natUrl"
                        alt="@Model.Nationality"
                        style="max-width:100px;">
                    <p>@Model.Nationality</p>

                </div>


                <div id="activity" class="shadow p-3 mb-5 bg-light rounded w-75">
                    <div class="text-start rounded w-25 bg-@(Model.IsActive ? "success" : "warning") text-light">
                        <h5 class="text-center p-1">Is Active?</h5>
                    </div>
                    <h4>@(Model.IsActive ? "Yes" : "No")</h4>
                </div>
            </div>
        </div>
        <!-- Player information -->
    </div>
</div>

@if (Model.Team != null)
{
    <!--TEAM PLAYERS-->
    <div class="card mt-2 mb-2">
        <div class="card-header d-flex justify-content-between align-items-center bg-light" id="teamplayers-header">
            <h3>Team's players</h3>
            <div id="arrow-container">
                <i class="hidden bi bi-arrow-up" style="font-size: 1.5rem"></i>
                <i class="bi bi-arrow-down" style="font-size: 1.5rem"></i>
            </div>
        </div>
        <div class="card-body" id="teamplayers-body" style="display: block">
            <!-- Players -->
            @if (Model.Team.Players.Any())
            {
                <div class="row text-center">
                    @foreach (var player in Model.Team.Players)
                    {
                        @if (player.Id == Model.Id)
                        {
                            <div class="col col-sm-12 col-md-6 col-lg-4 col-xl-3" style="pointer-events:none;opacity:0.6">
                                <partial name="Partials/_PlayerCardPartial" model="@player"/>
                            </div>
                        }
                        else
                        {
                            <div class="col col-sm-12 col-md-6 col-lg-4 col-xl-3">
                                <partial name="Partials/_PlayerCardPartial" model="@player"/>
                            </div>
                        }
                    }

                </div>
            }
            else
            {
                <h3>Team is empty!</h3>
            }

        </div>
    </div>
}


<style>

.progress{
display: unset;
height: unset;
overflow: unset;
background:unset;
border-radius: unset;
font-size: unset;

  position: relative;
  margin: 4px;
  float:left;
  text-align: center;
}
.barOverflow{ /* Wraps the rotating .bar */
  position: relative;
  overflow: hidden; /* Comment this line to understand the trick */
  width: 90px; height: 45px; /* Half circle (overflow) */
  margin-bottom: -14px; /* bring the numbers up */
}
.bar{
  position: absolute;
  top: 0; left: 0;
  width: 90px; height: 90px; /* full circle! */
  border-radius: 50%;
  box-sizing: border-box;
  border: 10px solid #eee;     /* half gray, */
  border-bottom-color: #0bf;  /* half azure */
  border-right-color: #0bf;
}

</style>
<!--SKILLS-->
<div class="card mt-2 mb-2">
    <div class="card-header d-flex justify-content-between align-items-center bg-light" id="attributes-header" onclick="activeProgressAnimation()">
        <h3>Skills</h3>
        <div id="arrow-container">
            <i class="hidden bi bi-arrow-up"></i>
            <i class="bi bi-arrow-down"></i>
        </div>
    </div>
    <div class="card-body" id="attributes-body" style="display: none;">
        <a class="action-icon d-flex justify-content-end" asp-controller="Players" asp-action="Edit" asp-route-id="@Model.Id" title="Edit @Model.FullName">
            <i class="bi bi-pencil-square" style="color: blue;"></i>
        </a>
        @if (Model.Attribute != null)
        {
            <div class="row">
                <div class="d-flex flex-column align-items-center justify-content-center border border-1 rounded text-center col-sm-12 col-md-4 col-lg-4 col-xl-4">
                    <div class="mt-2 mb-2">
                        <div class="progress">
                            <div class="barOverflow">
                                <div class="bar"></div>
                            </div>
                            <span>@PlayerFunctions.GetOverallRating(Model)</span> / 100
                        </div>
                    </div>
                    <div class="mt-2 mb-1">
                        <h3>Overall Rating</h3>
                    </div>
                </div>
                <!-- Player attributes -->
                <div class="row col-sm-12 col-md-8 col-lg-8 col-xl-8">
                    <div class="col col-sm-6 col-md-4 col-lg-4 col-xl-4 d-flex flex-column align-items-center justify-content-center">
                        <div class="progress">
                            <div class="barOverflow">
                                <div class="bar"></div>
                            </div>
                            <span>@Model.Attribute.Dribbling</span>
                        </div>
                        <div>
                            <strong>@Html.DisplayNameFor(c => Model.Attribute.Dribbling)</strong>
                        </div>
                    </div>
                    <div class="col col-sm-6 col-md-4 col-lg-4 col-xl-4 d-flex flex-column align-items-center justify-content-center">
                        <div class="progress">
                            <div class="barOverflow">
                                <div class="bar"></div>
                            </div>
                            <span>@Model.Attribute.Passing</span>
                        </div>
                        <div>
                            <strong>@Html.DisplayNameFor(c => Model.Attribute.Passing)</strong>
                        </div>
                    </div>
                    <div class="col col-sm-6 col-md-4 col-lg-4 col-xl-4 d-flex flex-column align-items-center justify-content-center">
                        <div class="progress">
                            <div class="barOverflow">
                                <div class="bar"></div>
                            </div>
                            <span>@Model.Attribute.Juggling</span>
                        </div>
                        <div>
                            <strong>@Html.DisplayNameFor(c => Model.Attribute.Juggling)</strong>
                        </div>
                    </div>
                    <div class="col col-sm-6 col-md-4 col-lg-4 col-xl-4 d-flex flex-column align-items-center justify-content-center">
                        <div class="progress">
                            <div class="barOverflow">
                                <div class="bar"></div>
                            </div>
                            <span>@Model.Attribute.Shooting</span>
                        </div>
                        <div>
                            <strong>@Html.DisplayNameFor(c => Model.Attribute.Shooting)</strong>
                        </div>
                    </div>
                    <div class="col col-sm-6 col-md-4 col-lg-4 col-xl-4 d-flex flex-column align-items-center justify-content-center">
                        <div class="progress">
                            <div class="barOverflow">
                                <div class="bar"></div>
                            </div>
                            <span>@Model.Attribute.Tackling</span>
                        </div>
                        <div>
                            <strong>@Html.DisplayNameFor(c => Model.Attribute.Tackling)</strong>
                        </div>
                    </div>
                    <div class="col col-sm-6 col-md-4 col-lg-4 col-xl-4 d-flex flex-column align-items-center justify-content-center">
                        <div class="progress">
                            <div class="barOverflow">
                                <div class="bar"></div>
                            </div>
                            <span>@Model.Attribute.Reaction</span>
                        </div>
                        <div>
                            <strong>@Html.DisplayNameFor(c => Model.Attribute.Reaction)</strong>
                        </div>
                    </div>
                    <div class="col col-sm-6 col-md-4 col-lg-4 col-xl-4 d-flex flex-column align-items-center justify-content-center">
                        <div class="progress">
                            <div class="barOverflow">
                                <div class="bar"></div>
                            </div>
                            <span>@Model.Attribute.Vision</span>
                        </div>
                        <div>
                            <strong>@Html.DisplayNameFor(c => Model.Attribute.Vision)</strong>
                        </div>
                    </div>
                    <div class="col col-sm-6 col-md-4 col-lg-4 col-xl-4 d-flex flex-column align-items-center justify-content-center">
                        <div class="progress">
                            <div class="barOverflow">
                                <div class="bar"></div>
                            </div>
                            <span>@Model.Attribute.Positioning</span>
                        </div>
                        <div>
                            <strong>@Html.DisplayNameFor(c => Model.Attribute.Positioning)</strong>
                        </div>
                    </div>
                </div>
                <!-- Player attributes -->
            </div>
        }
        else
        {
            <h3>Not yet set skills for @Model.FullName</h3>
            <a asp-controller="Players" asp-action="Edit" asp-route-id="@Model.Id">Update skills</a>
        }
    </div>
</div>

<!--TRANSFERS-->
<div class="card mt-2 mb-2">
    <div class="card-header d-flex justify-content-between align-items-center bg-light" id="transfers-header">
        <h3>Transfer history</h3>
        <div id="arrow-container">
            <i class="hidden bi bi-arrow-up"></i>
            <i class="bi bi-arrow-down"></i>
        </div>
    </div>
    <style>
.dot {
  height: 25px;
  width: 25px;
  margin-right: 5px;
  background-color: dodgerblue;
  border-radius: 50%;
  display: inline-block;
}
</style>
    <div class="card-body" id="transfers-body" style="display: none;">
        <!-- Player transfer history -->

        @if (Model.Transfers.Any())
        {
            <ul class="mt-4 text-center">
                @{
                    var counter = Model.Transfers.Count;
                }
                @foreach (var transfer in Model.Transfers.OrderByDescending(t => t.History).ToList())
                {
                    int overflowCounter = 0;
                    <div class="d-flex align-items-center justify-content-center">
                        @for (int i = counter; i > 0; i--)
                        {
                            if (i > 4)
                            {
                                overflowCounter++;
                            }
                            else
                            {
                                <span class="dot mt-2 mb-2"></span>
                            }
                        }
                        @if (overflowCounter > 0)
                        {
                            <span style="display:inline-block;height:25px;width: 25px">+@overflowCounter</span>
                        }
                    </div>

                    <div class="timeline-item rounded border border-1 p-1">
                        @{
                            var logoPathPart = string.IsNullOrEmpty(transfer.Team.LogoPath) ? "default.png" : transfer.Team.LogoPath;
                        }
                        <img src="@("~/uploads/teams/logos/" + logoPathPart)" asp-append-version="true" class="w-50 rounded" style="max-width:100px" alt="team's logo"/>
                        <h5 class="my-3">@transfer.History.ToShortDateString()</h5>
                        <h6>Transfered @transfer.Player.FullName to @transfer.Team.Name at @transfer.History.</h6>
                    </div>
                    counter--;
                }

            </ul>
        }
        else
        {
            <h3>No transfers found.</h3>
            <a asp-controller="Transfers" asp-action="TeamsIndex" asp-route-playerid="@Model.Id">Transfer @Model.FullName</a>
        }

        <!-- Player transfer history -->
    </div>
</div>


@section Scripts{
    <script>
    function activeProgressAnimation(){
    $(".progress").toggleClass("activated");
    if ($(".progress").hasClass("activated"))
    {
        $(".progress").each(function(){
            
          var $bar = $(this).find(".bar");
          var $val = $(this).find("span");
          var perc = parseInt( $val.text(), 10);
        
          $({p:0}).animate({p:perc}, {
            duration: 1500,
            easing: "swing",
            step: function(p) {
                if(p >= 90){
                    $bar.css("border-bottom-color","#0bf");
                    $bar.css("border-right-color","#0bf");
                    }
                else if(p >= 75){
                    $bar.css("border-bottom-color","green");
                                    $bar.css("border-right-color","green");
                    }
                else if(p >= 50){
                                $bar.css("border-bottom-color","orange");
                                                $bar.css("border-right-color","orange");
                                }
                else{
                    $bar.css("border-bottom-color","red");
                                    $bar.css("border-right-color","red");
                    }
              $bar.css({
                transform: "rotate("+ (45+(p*1.8)) +"deg)", // 100%=180° so: ° = % * 1.8
                // 45 is to add the needed rotation to have the green borders at the bottom
              });
              $val.text(p|0);
            }
          });
        });
    }
    }
    </script>
    <script>
    $(".card").find(".card-header").click(function() {
        let $arrows = $(this).find("i");
        $(this).parent().find(".card-body").slideToggle(function (){
            $arrows.toggle();
            });
    });
                    </script>
}